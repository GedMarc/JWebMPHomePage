public class EntityClass extends BaseEntity<EntityClass, EntityClassBuilder, Long>
public class EntityClassBuilder extends QueryBuilder<EntityClassBuilder, EntityClass, Long>

@MappedSuperclass
public abstract class BaseEntity<
            J extends BaseEntity<J, Q, I>,
            Q extends BaseEntityBuilder<Q, J, I>,
            I extends Serializable>
extends BaseEntity<J, Q, I>

class Entity<J,Q,I> extends BaseEntity

J> is always the type of the type being referenced (CRP)

Q> is the query builder instance that must extend QueryBuilderExecutor

I> is the serializable that identifies they Entity Key. Embedded and Mapped keys are of course allowed


class EntityBuilder<J,E,I> extends QueryBuilder

J> is always the type being referred (EntityBuilder in the example)

E> is the entity type that maps properly to the strictly typed class

I> is the key type (Forced type safety between builder and entity
